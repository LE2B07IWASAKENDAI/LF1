#include "MapChip.h"

MapChip::MapChip()
{
}

MapChip::~MapChip()
{
	//メモリの解放（マップチップデータの破棄）
	for (size_t i = 0; i < MAP_COUNT; i++) {
			vector<vector<int>>().swap(mapData[i].data);
	}
}

void MapChip::Initialize()
{
	LoadMap();
	LoadTexture();
}


void MapChip::Update()
{
}

void MapChip::Draw()
{
	//キー押下でマップ番号変更
	if (CheckHitKey(KEY_INPUT_L) == 1) {
		//マップ番号の指定
		mapNumber = 0;
	}
	if (CheckHitKey(KEY_INPUT_P) == 1) {
		mapNumber = 1;
	}
	//現在のマップ番号更新
	UpdateMapNumber(GetMapNumber());
	
	MapDraw();
}

void MapChip::MapDraw()
{
	//現在のマップ番号を取得し、描画する
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			switch (mapData[GetMapNumber()].data[i][j])
			{
			case 0:
				//  "床" 描画処理
				DrawGraph(j * MAP_SIZE, i * MAP_SIZE, gHandle[0], FALSE);
				break;
			case 1:
				//  "壁" 描画処理
				DrawGraph(j * MAP_SIZE, i * MAP_SIZE, gHandle[1], FALSE);
				break;
			case 4:
				//  "空いてる扉" 描画処理
				DrawGraph(j * MAP_SIZE, i * MAP_SIZE, gHandle[4], FALSE);
				break;
			case 5:
				//  "閉じてる扉" 描画処理
				DrawGraph(j * MAP_SIZE, i * MAP_SIZE, gHandle[5], FALSE);
				break;
			}
		}
	}
	//for (size_t i = 0; i < mapData.size(); i++) {
	//	for (size_t j = 0; j < mapData[0].size(); j++) {
	//		if (mapData[i][j] == 0) {
	//			DrawBox(j * MAP_SIZE, i * MAP_SIZE,
	//				j * MAP_SIZE + MAP_SIZE, i * MAP_SIZE + MAP_SIZE,
	//				GetColor(255, 255, 255), FALSE);
	//		}
	//	}
	//}

}

void MapChip::LoadMap()
{
	//マップチップ一覧
	mapData[0] =
	{
		14,
		84,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 1, 1, 1, 1, 4, 1, 5, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1,1,1,1} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
		}
	};

	mapData[1] =
	{
		84,
		14,
		{
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0,0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0} ,
		}
	};

}

void MapChip::LoadTexture()
{
	//変数 画像データ格納
	gHandle[0] = LoadGraph("Resources/Map/yuka.png");
	gHandle[1] = LoadGraph("Resources/Map/wall.png");
	gHandle[2] = LoadGraph("Resources/Map/.png");
	gHandle[3] = LoadGraph("Resources/Map/.png");
	gHandle[4] = LoadGraph("Resources/Map/door_open.png");
	gHandle[5] = LoadGraph("Resources/Map/door_close.png");
}

void MapChip::UpdateMapNumber(int nowMapNumber)
{
	//マップ番号を現在の番号に変更する
	mapNumber = nowMapNumber;
}

