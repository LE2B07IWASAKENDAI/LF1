#include "MapChip.h"

MapChip::MapChip()
{
}

MapChip::~MapChip()
{
	//メモリの解放（マップチップデータの破棄）
	for (size_t i = 0; i < MAP_COUNT; i++) {
		vector<vector<int>>().swap(mapData[i].data);
	}
}

void MapChip::Initialize()
{
	hide = 0;
	LoadMap();
	LoadTexture();
	scroll_X = 0.0f;
}


void MapChip::Update()
{

}

void MapChip::Draw(float position)
{
	if (position >= end)
	{
		scroll_X = endChip * -1;
	}
	if (position >= start && position <= end)
	{
		scroll_X = start - position;
	}

	//現在のマップ番号更新
	UpdateMapNumber(GetMapNumber());
}

void MapChip::MapDraw()
{
	//現在のマップ番号を取得し、描画する
	//for (int i = 0; i < 14; i++) {
	//	for (int j = 0; j < 84; j++) {
	//		switch (mapData[GetMapNumber()].data[i][j])
	//		{
	//		case 0:
	//			//  "  床   " 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[0], FALSE);
	//			break;
	//		case 1:
	//			//  "  壁   " 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[1], FALSE);
	//			break;
	//		case 2:
	//			//  "スタート" 描画処理
	//			//DrawGraph(j * MAP_SIZE, i * MAP_SIZE, gHandle[1], FALSE);
	//			//break;
	//		case 3:
	//			//  "ゴール地点" 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[3], FALSE);
	//			break;
	//		case 4:
	//			//  "空いてる扉" 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[4], TRUE);
	//			break;
	//		case 5:
	//			//  "閉じてる扉" 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[5], TRUE);
	//			break;
	//		case 6:
	//			//  " 椅　子 " 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[6], TRUE);
	//			break;
	//		case 7:
	//			//  "   机    " 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[7], TRUE);
	//			break;
	//		case 8:
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[9], FALSE);
	//			break;
	//		case 9:
	//			//  "  巾木    " 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[9], FALSE);
	//			break;
	//		case 10:
	//			//  "花瓶" 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[1], FALSE);
	//			break;
	//		case 15:
	//			//  "対右の敵から隠れる " 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[11], FALSE);
	//			break;
	//		case 16:
	//			//  "対左の敵から隠れる" 描画処理
	//			DrawGraph(j * MAP_SIZE + scroll_X, i * MAP_SIZE, gHandle[10], FALSE);
	//			break;
	//		}
	//	}
	//}

	DrawItem(0,0);
	DrawItem(1,1);
	DrawItem(2,2);
	DrawItem(3,3);
	DrawItem(9,9);
	DrawItem(4,4);
	DrawItem(5,5);
	DrawItem(6, 6);
	DrawItem(17,1);

	DrawItem(8,8);
	DrawItem(28,8);
	DrawItem(7,7);
	DrawItem(15,15);
	DrawItem(16,16);

	DrawItem(10,9);
	DrawItem(18,1);
}

void MapChip::DrawItem(int chipNumber,int drwaNumber) {

	for (int i = 0; i < MAP_HEIGHT; i++) {
		for (int j = 0; j < MAP_WIDTH; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == chipNumber) {
				DrawGraph(j * MAP_SIZE + GetScroll(), i * MAP_SIZE + GetScroll_Y(), gHandle[drwaNumber], TRUE);
			}
		}
	}
}

void MapChip::DrawItem2(int chipNumber, int drwaNumber)
{
	for (int i = 0; i < MAP_HEIGHT * 2; i++) {
		for (int j = 0; j < MAP_WIDTH; j++) {
			//
			if (mapData[GetMapNumber()].data[i][j] == chipNumber) {
				DrawGraph(j * MAP_SIZE + GetScroll(), i * MAP_SIZE + GetScroll_Y(), gHandle[drwaNumber], TRUE);
			}
		}
	}
}


void MapChip::MapDraw5()
{
	DrawItem2(0, 0);
	DrawItem2(1, 1);
	DrawItem2(2, 2);
	DrawItem2(3, 3);
	DrawItem2(9, 9);
	DrawItem2(4, 4);
	DrawItem2(5, 5);
	DrawItem2(6, 6);
	DrawItem2(7, 7);
	DrawItem2(8, 8);
	DrawItem2(17,1);
	DrawItem2(28, 8);
	DrawItem2(15, 15);
	DrawItem2(16, 16);

	DrawItem2(20, 20);
	DrawItem2(21, 20);
	DrawItem2(22, 20);
	DrawItem2(23, 20);


	DrawItem2(10, 9);
	DrawItem2(18, 1);

}

void MapChip::LoadMap()
{
	//マップチップ一覧
	mapData[0] =
	{
		14,
		84,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 4, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 5, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 4, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 5, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1},
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/ 9, 9, 8, 9, 9, 9, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0},
		}
	};

	mapData[1] =
	{
		84,
		14,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 4, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 6, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 7, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 6, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 7, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9,10, 9,/*20*/9, 9, 9, 9, 9, 9, 9,10, 9, 9,/*30*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 8, 9, 9,/*50*/  9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/15, 0, 0, 0, 0,16, 0, 0, 0,15,/*20*/0, 0, 0, 0,16, 0, 0, 0, 0, 0,/*30*/0, 0, 0, 0, 0,15, 0, 0, 0, 0,/*40*/16, 0, 0, 0, 0, 0, 0, 0, 0,15,/*50*/ 0, 0, 0, 0,16, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
		}
	};

	mapData[2] =
	{
		84,
		14,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 4, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 5, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 4, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 7, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/7, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 9, 9, 9, 9, 8, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 9,28, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0,15, 0,/*30*/ 0, 0, 0,16, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0,15, 0,/*60*/0, 0, 0,16, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
		}		
	};

	mapData[3] =
	{
		84,
		14,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/18, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1,18, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 7, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 7, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 7, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*70*/9, 9, 9, 9,28, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0,15, 0,/*10*/ 0, 0, 0,16, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0,15, 0, 0, 0, 0,/*40*/16,0, 0, 0, 0, 0, 0, 0,15, 0,/*50*/ 0, 0, 0,16, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
		}
	};

	mapData[4] =
	{
		84,
		28,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/1,1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1,18, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 7, 1,/*50*/ 1, 1, 1, 1, 6, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9,20, 9, 9, 9,28, 9, 9, 9,/*20*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 8, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 1, 9, 9, 9,15, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 9, 23, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 8, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 15, 0, 0, 0,/*50*/0,16, 0,15, 0, 0, 0, 0,16, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,

			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/7, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 21, 9, 9, 9, 9, 9, 9,9,/*20*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 9, 22, 9, 9, 9, 9,/*70*/28, 9, 9, 8, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 15,0,/*20*/0, 0, 0,16, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
		}
	};

	mapData[5] =
	{
		84,
		28,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1,18, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 7, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 7, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/20, 9, 9, 9, 8, 9, 9, 9, 9, 9,/*30*/9, 9, 9, 9, 9, 8, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/23, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9,28, 9, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0,15, 0,/*10*/ 0, 0, 0,16, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0,15, 0, 0, 0, 0,16, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,

			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 7, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/21, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*40*/8, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/22, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9,28, 9, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0,15, 0, 0, 0, 0,16, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
		}
	};

	mapData[6] =
	{
		84,
		28,
		{
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/ 1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 4, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 5, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 5, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/6, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/20,9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 8, 9, 9, 9, 9, 8, 9, 9, 9, 9,/*40*/9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 9,23, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 8, 9, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0,15,/*60*/0, 0, 0, 0,16, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,

			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1,17, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1,17, 1, 1, 1,/*20*/1, 1, 1, 1, 1,17, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1,17, 1, 1, 1, 1, 1,/*40*/ 1, 1, 1,17, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1,17, 1, 1, 1, 1, 1, 1, 1,/*60*/ 1,17, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/17,1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1},
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 5, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*80*/ 1, 1, 1, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1,18, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*10*/ 1, 1, 1, 1, 7, 1, 1, 1, 1, 1,/*20*/1, 1, 1, 1, 1, 1, 1, 1, 7, 1,/*30*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*40*/1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*50*/ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/*60*/1, 6, 1, 1, 1, 1, 1, 1, 1, 1,/*70*/1, 1, 1, 1, 1, 1, 1, 1, 1, 3,/*80*/ 3, 3, 3, 1} ,
			{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*10*/ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*20*/21,9, 9, 9, 9, 9, 9, 9, 9, 9,/*30*/ 9, 8, 9, 9, 9, 9,28, 9, 9, 9,/*40*/8, 9, 9, 9, 9, 9, 9, 9, 9, 9,/*50*/ 9,22, 9, 9, 9, 9, 9, 9, 9, 9,/*60*/9, 9, 9, 9, 9,28, 9, 9, 9, 9,/*70*/9, 9, 9, 9, 9, 9, 9, 9, 9, 3,/*80*/ 3, 3, 3, 1},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0,15, 0, 0, 0, 0,16, 0, 0,/*20*/0, 0, 0, 0, 0, 0,15, 0, 0, 0,/*30*/ 0,16, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/15,0, 0, 0, 0,16, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*10*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*20*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*30*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*40*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*50*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*60*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*70*/0, 0, 0, 0, 0, 0, 0, 0, 0, 0,/*80*/ 0, 0, 0, 0} ,
		}
	};
}

void MapChip::LoadTexture()
{
	//変数 画像データ格納
	gHandle[0] = LoadGraph("Resources/Map/Cobblestone.png");
	gHandle[1] = LoadGraph("Resources/Map/Wall.png");
	gHandle[2] = LoadGraph("Resources/Map/.png");
	gHandle[3] = LoadGraph("Resources/Map/goal.png");
	gHandle[4] = LoadGraph("Resources/Map/Open_door.png");
	gHandle[5] = LoadGraph("Resources/Map/Door.png");
	gHandle[6] = LoadGraph("Resources/Map/Wall.png");
	gHandle[7] = LoadGraph("Resources/Map/Desk.png");
	/*8は敵の生成場所*/
	gHandle[8] = LoadGraph("Resources/Map/Baseboard_Wall.png");
	gHandle[9] = LoadGraph("Resources/Map/Baseboard_Wall.png");
	gHandle[10] = LoadGraph("Resources/Map/Vase.png");
	gHandle[15] = LoadGraph("Resources/Map/light_right.png");
	gHandle[16] = LoadGraph("Resources/Map/light_left.png");

	gHandle[19] = LoadGraph("Resources/Map/hide_door_message.png");

	gHandle[20] = LoadGraph("Resources/Map/Corridor.png");
}

void MapChip::UpdateMapNumber(int nowMapNumber)
{
	//マップ番号を現在の番号に変更する
	mapNumber = nowMapNumber;
}

void MapChip::Scroll(float position)
{
	if (position >= start)
	{
		scroll_X = position - start;
	}
}

float MapChip::Get_position_8_X()
{
	for (int i = 0; i < MAP_HEIGHT; i++) {
		for (int j = 0; j < MAP_WIDTH; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 8) {
				position_8_X = j * MAP_SIZE + scroll_X;
			}
		}
	}

	return position_8_X;
}

float MapChip::Get_position_8_Y()
{
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 8) {
				position_8_Y = i * MAP_SIZE + scroll_Y;
			}
		}
	}
	return position_8_Y;
}

float MapChip::GetPosition_10_X()
{
	for (int i = 0; i < MAP_HEIGHT; i++) {
		for (int j = 0; j < MAP_WIDTH; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 10) {
				position_12_X = j * MAP_SIZE + scroll_X;
			}
		}
	}
	return position_12_X;
}

float MapChip::GetPosition_10_Y()
{
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 10) {
				position_12_Y = i * MAP_SIZE + scroll_Y;
			}
		}
	}

	return position_12_Y;
}

float MapChip::GetPosition_21_X()
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 21) {
				position_21_X = j * MAP_SIZE /*+ GetScroll()*/;
			}
		}
	}
	return position_21_X;
}

float MapChip::GetPosition_21_Y()
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 21) {
				position_21_Y = i * MAP_SIZE + GetScroll_Y();
			}
		}
	}
	return position_21_Y;
}

float MapChip::GetPosition_23_X()
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 84; j++) {
			//
			if (mapData[GetMapNumber()].data[i][j] == 23) {
				position_23_X = j * MAP_SIZE/* + GetScroll()*/;
			}
		}
	}
	return position_23_X;
}

float MapChip::GetPosition_23_Y()
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 84; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 23) {
				position_23_Y = i * MAP_SIZE + GetScroll_Y();
			}
		}
	}
	return position_23_Y;
}

bool MapChip::OnCollisionDoor(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 4) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionDoor_28(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 4) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionWarp_20(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 20) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionWarp_22(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 22) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionChair_Right(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 15) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x + 30, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionChair_Right_28(float x, float y, int sizeX, int sizeY)
{

	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 15) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x + 30, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionChair_Left(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 16) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x - 30, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionChair_Left_28(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 28; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 16) {
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x, y, sizeX, sizeY))
				{
					SetHideTrigger(true);

					return true;
				}
			}
			else {
				SetHideTrigger(false);
			}
		}
	}
	return false;
}

bool MapChip::OnCollisionGoal(float x, float y, int sizeX, int sizeY)
{
	for (int i = 0; i < 14; i++) {
		for (int j = 0; j < 82; j++) {
			//プレイヤーが扉の前に来たら当たりの判定を入れる
			if (mapData[GetMapNumber()].data[i][j] == 3)
			{
				if (CheckHit(j * MAP_SIZE, i * MAP_SIZE, MAP_SIZE, MAP_SIZE,
					x, y, sizeX, sizeY))
				{
					return true;
				}
				//当たっていないときはhide = false;
				//else
				//{
				//	SetHideTrigger(false);
				//}
			}
		}
	}
	return false;
}

int MapChip::CheckHit(int x1, int y1, int w1, int h1,
	int x2, int y2, int w2, int h2)
{
	int L1 = x1;
	int R1 = x1 + w1;
	int L2 = x2;
	int R2 = x2 + w2;

	if (R1 < L2)return 0;
	if (R2 < L1)return 0;

	//上記以外は当たっている
	return 1;
}

